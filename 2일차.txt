앞에 git이 붙으면 git 에 대한 명령어 붙지 않으면 리눅스 명령어이다.

git init			: .git 하위 디렉토리 생성

git			: git의 명령어를 모두 나타냄

git status			: 현재의 상태를 보여줌

git add <file>		: 해당 파일을 add 함

git add --all		: 모든 파일을 add

git commit -m "name" <file>	: 해당을 git으로 기록하여 관리 할 거 라면 committed *file 명을 쓰지 않으면 add 되어 있는 모든 파일을 commit

git rm --cached <file>	: git으로 기록하여 관리 하지 않을거라면

git rm --cached <디렉토리/> -r

* git으로 관리할거라면 add 후 commit

commit을 하게 되면 처음에 글로벌 유저 name과 email
git config --global user.name hahyong
git config --global user.email jlhh0325@naver.com

git log			: 기록 표시

git log --oneline		: 한 줄로 표시

git remote add (별칭) github주소	: github에 올림 *별칭은 보편적으로 origin을 많이 씀

git remote -v	: 연결 주소 확인
 
git remote rm aaa	: 원격지 삭제

git push -u origin master	: 업로드 
          ㄴ업데이트 

403 에러가 뜬다면 자격  증명 검색해서 windows 자격증명에서 git 제거

실습

폴더 git-test2 생성
git hub test2 레파지토리 생성
f1.txt 파일 생성 후 깃허브에 올리기

파일 내용을 수정했을때에도 다시 add 와 commit 해야 함

git commit -am "name" 	: 수정 후 commit

git push -u origin master	: 수정 후 업로드

	*.gitignore 파일 확장명 삭제 후 생성
	.gitignore 파일 안에 숨기고 싶은 파일을 쓴다.
실습 2
GitHub에 test3 repositories를 만드시오.

현재 위치 이전으로 가서 my_repos_03 폴더를 생성하고
test01, test02, tes03 파일을 만들고 git add –all까지 진행 후
test02파일은 Staging Area에서 제외시키고 
test01, test03를 commit하고 push까지 진행 하시오.
(--all 한번에 모든 값을 add해줌)(  --cached를 사용하여 배제  )

현재 위치에서 a,b,c 디렉터리를 만들고 
각 디렉터리아래 a.txt, b.txt, c.txt파일을 생성하고 git add –all명령을 진행한다. 
여기서 b디렉터리는 add로 올라가지 않게 제외시킨 후 
git add –all을 진행하고 commit를 하여 push까지 진행하시오.
결과는 github에 a,c 디렉터리만 올라가게 된다.
( .gitignore 사용하며 해당파일 과 test02 파일 역시 github에 올리면 안된다. )


 * 폴더와 파일 동시에 생성할 때
 touch a/a.txt b/b.txt c/c.txt

