<1조>

문제 1.
 임의의 수가 그것이 위치하는 행과 열 번호의 곱과 같은 4x4 행렬을 출력하는 코드를 배열과 for문을 이용하여 작성하라.
각 열 간의 간격은 탭으로 처리한다


문제 2.
 공백 문자로 구분되는 두 자연수 a와 b를 입력받아 a와 b 자신을 포함한 그 사이에 있는 
모든 자연수의 합을 출력하도록 for문을 이용하여 작성하라

문제 3.
 해당 배열을 처음부터 끝까지 반복하면서 
배열의 값이 25보다 작으면 "25보다 작다"를 출력, 
25면 "25다"를 출력, 25보다 크면 "25보다 크다"를 출력한다.
int[] str = new int[] {5,10,15,20,25,30,35,40,45};


문제 4.

10개의 정수를 저장할 수 있는 배열을 선언하고 
정수를 차례로 입력받다가 0이 입력되면 0을 제외하고 
그때까지 입력된 정수를 가장 나중에 입력된 정수부터 차례대로 출력하게 한다.


문제 5.
 별찍기
   ★
   ★★
   ★★★
   ★★★★
   ★★★★★




문제 6.
 별찍기
    ★
   ★★
  ★★★
 ★★★★
★★★★★

문제 7.
다이아몬드 광산은 0과 1로 이루어진 R행*C열 크기의 배열이다.

다이아몬드는 1로 이루어진 정사각형의 경계선을 45도 회전시킨 모양이다. 크기가 1, 2, 3인 다이아몬드 모양은 다음과 같이 생겼다.

size 1:    size 2:    size 3:
                         1
              1         1 1
  1         1 1       1   1
              1         1 1
                         1
다이아몬드 광산에서 가장 큰 다이아몬드의 크기를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 R과 C가 주어진다. R과 C는 750보다 작거나 같은 자연수이다. 둘째 줄부터 R개의 줄에는 다이아몬드 광산의 모양이 주어진다.

출력
첫째 줄에 다이아몬드 광산에서 가장 큰 다이아몬드의 크기를 출력한다. 만약 다이아몬드가 없을 때는 0을 출력한다.
문제 8.





-------------------------------------------<풀이>-----------------------------------------------

<문제 1.>

public class Main {
    public static void main(String[] args) {
      int arr_num_a = 4;
      int arr_num_b = 4;
       int[] arr_a = new int[arr_num_a];
      int[] arr_b = new int[arr_num_b];
      for (int i=0;i<arr_num_a;i++){
         arr_a[i]=i+1;
         for (int j=0;j<arr_num_b;j++){
            arr_b[j]=j+1;
            System.out.print(arr_a[i]*arr_b[j]+"\t");
         }
         System.out.println();
      }
   }
}



<문제 2.>

import java.util.Scanner;
public class Main {
   public static void main(String[] args) {
      int a, b, temp, tempsum, tempcache;
      Scanner input = new Scanner(System.in);
      a = input.nextInt();
      b = input.nextInt();
      if (a > b) {
         tempcache=0;
         tempsum=0;
         for (int i = 0; i<=(a - b); i++) {
            temp = b+i;
            tempsum = tempcache + temp;
            tempcache = tempsum;
         }
         System.out.println(tempsum);
      } else {
         tempcache=0;
         tempsum=0;
         for (int i = 0; i<=(b - a); i++) {
            temp = a+i;
            tempsum = tempcache + temp;
            tempcache = tempsum;
         }
         System.out.println(tempsum);
      }
   }
}


<문제 3.>

public static void main(String[] args) {
   int[] str = new int[] {5,10,15,20,25,30,35,40,45};
   
   for(int i = 0; i < str.length; i++) {
      if(str[i] < 25 ) {
         System.out.println("25보다 작다");
      }else if(str[i] == 25) {
         System.out.println("25다");
      }else {
         System.out.println("25보다 크다");
      }
}
}
}



<문제 4.>

public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    int[] arr = new int[10];
    int i, z = 0;
    
    for( i=0; i < arr.length; i++) {
       arr[i] = input.nextInt();
       
       if( arr[i] == 0) {
          break;
       }
       z++;
    }
    for( i=z-1; i>=0; i--) {
       System.out.println(arr[i]+"");
    }
} 
}


<문제 5.>

int num=0;
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("몇개의 별을 찍을까요?: ");
		num=scan.nextInt();
		
		for(int i=1;i<=num;i++) {
			
			for (int j=1;j<=i;j++) {
			
				System.out.print("★");
				
				if(j==i) {
					System.out.println();
					
				}
				
			}
			
		}


<문제 6.>

 int num=0;
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("몇개의 별을 찍을까요?: ");
		num=scan.nextInt();
		
		for(int i=1;i<=num;i++) {
			
			for (int j=num;j>i;j--) {
				System.out.print(" ");
			}
			for (int k=1;k<=i;k++) {
				System.out.print("★");
				
				}
				
			
			System.out.println("");
			
		}



<문제 7.>
		Scanner input = new Scanner(System.in);
		int choice = 0;
		ArrayList<int[]> lineReadList = new ArrayList<>();
		int maxRowRange = 0;
		int result = 0;
		int r = 0;
		int c = 0;

		System.out.println("1. 직접입력");
		System.out.println("2. 랜덤생성");
		System.out.print(">> 입력 : ");
		choice = input.nextInt();
		System.out.println("==============================");
		System.out.println("입력 값 범위 : 0 ~ 750");
		System.out.print(">> 행 입력 : ");
		r = input.nextInt();
		System.out.print(">> 열 입력 : ");
		c = input.nextInt();
		
		if (r >= 0 && r <= 750 && c >= 0 && c <= 750) {
			System.out.println("==============================");
			System.out.println("입력 값 : " + r + " * " + c);
			System.out.println("===============================");
			int[][] mountain = new int[r][c];
			
			if(choice == 1) {
				System.out.println(r + " * " + c + " 값 입력");
				System.out.println(">> 입력 :");

				int readCount = 0;
				
				while(readCount <= r) {
					String line = input.nextLine().replaceAll("\\s", "");
					int[] readLines = null;
					int lineLength = line.length();
	
					if (lineLength == c) {
						readLines = new int[lineLength];
						
						for (int i=0; i<lineLength; i++) {
							readLines[i] = Integer.parseInt(String.valueOf(line.charAt(i)));
						}
				
						lineReadList.add(readLines);
						readCount++;
					}
					
					if (readCount == r) {
						break;
					}
				}
				System.out.println("==============================");
			} 
			
			for (int j=0; j<r; j++) {
				for (int i=0; i<c; i++) {
					switch(choice) {
					case 1 :
						int[] lineReads = lineReadList.get(j);
						mountain[j][i] = lineReads[i];
						break;
					case 2 :
						int random = (int)((Math.random()*10)%2);
						mountain[j][i] = random;
						break;
					}
				}
			}
			
			
			for (int j=0; j<mountain.length; j++) {
				for (int i=0; i<mountain[j].length; i++) {
					System.out.print(mountain[j][i] + " ");
				}
				System.out.println();
			}
			
			System.out.println("==============================");
			
			maxRowRange = r/2;

			for (int j=0; j<mountain.length; j++) {		
				for (int i=0; i<mountain[j].length; i++) {
					int value = mountain[j][i];
					int size = value > 0 ? 1 : 0;
					int top = 0, bottom = 0, left = 0, right = 0;

					for (int k=1; k<=maxRowRange; k++) {
						top = j - k;
						bottom = j + k;
						left = i - k;
						right = i + k;
						
						if (top >= 0 && bottom < r && left >= 0 && right < c) {
							int topVal = mountain[top][i];
							int bottomVal = mountain[bottom][i];
							int leftVal = mountain[j][left];
							int rightVal = mountain[j][right];
							
							if (topVal == 0 || bottomVal == 0 || leftVal == 0 || rightVal == 0) {
								continue;
							} 
							
							for (int z=1; z<=k; z++) {
								if (j-z >=0 && j+z < r && i-z >=0 && i+z <c) {
									int topLeftVal = mountain[j-z][i-z];
									int topRightVal = mountain[j-z][i+z];
									int bottomLeftVal = mountain[j+z][i-z];
									int bottomRightVal = mountain[j+z][i+z];
									
									
									if (topLeftVal > 0 && topRightVal > 0 && bottomLeftVal > 0 && bottomRightVal > 0) {
										size = k+1;
									}		
								}
							}
						}
						
						result = result < size ? size : result;
					}
				}
			}
			
			System.out.println("결과 : " + result);
		} else {
			System.out.println("입력 값이 범위를 벗어났습니다.(0 ~ 750)");
			r = 0;
			c = 0;
		}
			
		input.close();

<문제 8.>







