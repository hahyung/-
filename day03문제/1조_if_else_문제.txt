< 1조 문제 및 문제 풀이>

문제 1.  34D/Gale 혜성은 1927년에 발견되었으며 그 주기는 11년이라고 한다 
          년도를 입력받아 당해 이 혜성을 발견 가능한지 판단하라.

문제 2. 정해진 시간 간격 사이의 이동 거리를 측정하여 과속 여부를 판단하는 과속단속기가 일방통행 도로를 감시중이다.
         정해진 시간 간격이 5초이고, 과속 기준이 54km/h(=15m/s) 초과일 때 5초간의 이동 거리를 미터로 입력받아 과속 여부를 판단하라.

문제 3.  연도가 주어졌을 때, 윤년이면 1, 아니면 0을 출력하는 프로그램을 작성하시오.
          윤년은 연도가 4의 배수이면서, 100의 배수가 아닐 때 또는 400의 배수일 때이다.
          예를 들어, 2012년은 4의 배수이면서 100의 배수가 아니라서 윤년이다.
          1900년은 100의 배수이고 400의 배수는 아니기 때문에 윤년이 아니다.
          하지만, 2000년은 400의 배수이기 때문에 윤년이다.

문제 4. 상근이는 매일 아침 알람을 듣고 일어난다. 알람을 듣고 바로 일어나면 다행이겠지만, 항상 조금만 더 자려는 마음 때문에 매일 학교를 지각하고 있다.
         상근이는 모든 방법을 동원해보았지만, 조금만 더 자려는 마음은 그 어떤 것도 없앨 수가 없었다.
         이런 상근이를 불쌍하게 보던, 창영이는 자신이 사용하는 방법을 추천해 주었다.바로 "45분 일찍 알람 설정하기"이다.
         이 방법은 단순하다. 원래 설정되어 있는 알람을 45분 앞서는 시간으로 바꾸는 것이다. 어차피 알람 소리를 들으면, 알람을 끄고 조금 더 잘 것이기 때문이다.
         이 방법을 사용하면, 매일 아침 더 잤다는 기분을 느낄 수 있고, 학교도 지각하지 않게 된다.
         현재 상근이가 설정한 알람 시각이 주어졌을 때, 창영이의 방법을 사용한다면, 이를 언제로 고쳐야 하는지 구하는 프로그램을 작성하시오.

문제 5. 수를 입력 받아 25보다 작으면 출력
         25보다 작진 않지만 50보다 작다 출력
         50보다 작진 않지만 75보다 작다 출력
         75보다 작진 않지만 100보다 작다 출력
         해당되지 않으면 100보다 크거나 같다 출력

문제 6. 수를 입력 받아 7살 이상 14살 미만이면 초등학교에 다닙니다 출력
        14살 이상 17살 미만이면 중학교에 다닙니다 출력
        17살 이상 20살 미만이면 고등학교에 다닙니다 출력
         7살 미만이면 학교에 다니지 않습니다 출력
        해당되지 않으면 학교에 다닐수도 있고 안 다닐수도 있습니다 출력

문제 7. 정렬된 두 묶음의 숫자 카드가 있다고 하자. 
	각 묶음의 카드의 수를 A, B라 하면 보통 두 묶음을 합쳐서 하나로 만드는 데에는 A+B 번의 비교를 해야 한다. 
	이를테면, 20장의 숫자 카드 묶음과 30장의 숫자 카드 묶음을 합치려면 50번의 비교가 필요하다.
	매우 많은 숫자 카드 묶음이 책상 위에 놓여 있다. 이들을 두 묶음씩 골라 서로 합쳐나간다면, 
	고르는 순서에 따라서 비교 횟수가 매우 달라진다. 
	예를 들어 10장, 20장, 40장의 묶음이 있다면 10장과 20장을 합친 뒤, 합친 30장 묶음과 40장을 합친다면 
	(10 + 20) + (30 + 40) = 100번의 비교가 필요하다. 
	그러나 10장과 40장을 합친 뒤, 합친 50장 묶음과 20장을 합친다면 (10 + 40) + (50 + 20) = 120 번의 비교가 필요하므로 덜 효율적인 방법이다.

	N개의 숫자 카드 묶음의 각각의 크기가 주어질 때, 최소한 몇 번의 비교가 필요한지를 구하는 프로그램을 작성하시오.

문제 8. 음이 아닌 정수 X의 자릿수가 가장 큰 자릿수부터 작은 자릿수까지 감소한다면, 그 수를 감소하는 수라고 한다. 
	예를 들어, 321과 950은 감소하는 수지만, 322와 958은 아니다.
	N번째 감소하는 수를 출력하는 프로그램을 작성하시오. 
	0은 0번째 감소하는 수이고, 1은 1번째 감소하는 수이다. 만약 N번째 감소하는 수가 없다면 -1을 출력한다.
	(첫째 줄에 N이 주어진다. N은 1,000,000보다 작거나 같은 자연수 또는 0이다.)




<<<<<<풀이>>>>>>


<문제 1>

import java.util.Scanner;
public class Main {
public static void main(String[] args) {    

   Scanner input = new Scanner(System.in);
   System.out.print("Year is : ");
   int year = input.nextInt();
   int difference = Math.abs(year-1927);
   if (difference%11==0) {
      System.out.println("Yes, you can see 34D/Gale in year "+year+".");
   }
   else {
      System.out.println("No, you can't see 34D/Gale in year "+year+".");
   }
   input.close();   
}
}


<문제 2>

import java.util.Scanner;
public class Main {
public static void main(String[] args) {   
   int interval = 5;
   Scanner input = new Scanner(System.in);
   System.out.print(interval+"초간 이동한 거리 : ");
   int moved_range = input.nextInt();
   if(moved_range/interval<=15) {
      System.out.println("정상 주행");
   }
   else {
      System.out.println("과속 경고");
   }
   input.close();
   }
}



<문제 3>

Scanner scan = new Scanner(System.in);
		System.out.println("궁금하신 년도를 입력하세요: ");
		System.out.println("단 년도는 1이상 4000이하여야 합니다.");
		int year=scan.nextInt();
		
		
		if (year%4==0 &&year%100!=0) {
			System.out.println("1");
			
		}else if (year%400==0) {
			
			System.out.println("1");
		}else {
				System.out.println("0");
			}
		



<문제 4>


                        int h; //시
		int m; //분
		
		
		
		System.out.println("일어나야 하는 시간을 정하세요: ");
		
		h=scan.nextInt();
		
		System.out.println("일어나야 하는 분을 정하세요:");
		
		m=scan.nextInt();
		
		if(m-45<0) {
			System.out.println((h-1)+"시"+(m-45+60)+"분으로 알람을 설정합니다.");
			
			
		}else if (m-45>0) {
			System.out.println(h+"시"+(m-45)+"분으로 알람을 설정합니다.");
		}else {
			System.out.println("다시 설정하세요.");
		}
		
			
			
		}
		
		
		
		
	}




<문제 5>
	
	int num;
Scanner input = new Scanner(System.in);	
	System.out.println("수 입력");
	num = input.nextInt();
	if (num < 25) {
		System.out.println("num은 25보다 작다");
	}else if(num < 50) {
		System.out.println("num은 25보다 작진 않지만 50보단 작다");
	}else if(num < 75) {
		System.out.println("num은 50보다 작진 않지만 75보단 작다");
	}else if(num < 100) {
		System.out.println("num은 75보다 작진 않지만 100보단 작다");
	}else {
		System.out.println("num은 100보다 크거나 같다");
	}


<문제 6>

	int age;
Scanner input = new Scanner(System.in);
	System.out.println("수 입력");
	age = input.nextInt();
	if(age >= 8 && age < 14) {
		System.out.println("초등학교에 다닙니다");
	}else if(age >=14 && age < 17) {
		System.out.println("중학교에 다닙니다");
	}else if(age >= 17 && age < 20) {
		System.out.println("고등학교에 다닙니다");
	}else if(age <= 7) {
		System.out.println("학교에 다니지 않습니다");
	}else {
		System.out.println("학교에 다닐수도 있고 안 다닐수도 있습니다");
	}



<문제 7>
		Scanner input = new Scanner(System.in);
		int num = 0;
		ArrayList<Integer> cardList = new ArrayList<>();
		ArrayList<Integer> cardSumList = new ArrayList<>();
		String cardsStr = "";
		int addCount = 0;
		int sumCount = 0;
		int result = 0;
		
		System.out.print("횟수 입력 : ");
		num = input.nextInt();
		
		for (int i=0; i<num; i++) {
			System.out.print("카드 장수 입력 : ");
			int cardNum = input.nextInt();
			cardsStr += cardNum;
			if (i<num-1) {
				cardsStr += " ";
			}
			
			cardList.add(cardNum);
		}
		
		System.out.println("======[입력 값]======");
		System.out.println(num);
		System.out.println(cardsStr);
		
		System.out.println("====================");

		Collections.sort(cardList);
		
		
		for (int i=1; i<cardList.size(); i++) {
			int cardSum = 0;
			if (i > 1) {
				cardSum = cardSumList.get(addCount) + cardList.get(i);
				cardSumList.add(cardSum);
				addCount++;
				sumCount++;
			} else {
				cardSum = cardList.get(i-1) + cardList.get(i);
				cardSumList.add(cardSum);
			}
		}
		
		for (int cardNum : cardSumList) {
			result += cardNum;
			sumCount++;
		}
		
		System.out.println("섞은 횟수 : " + sumCount);
		
		System.out.println("====================");
		
		System.out.println("결과 : " + result);


<문제 8>
		Scanner input = new Scanner(System.in);
		ArrayList<Integer> numList = new ArrayList<>();
		int num = 0;
		int result = 0;
		
		for (int i=0; i<=1000000; i++) {
			String numStr = String.valueOf(i);
			boolean isNumber = true;
			int numberLength = numStr.length();
			
			for (int j=0; j<numberLength; j++) {
				int num1 = Integer.parseInt(String.valueOf(numStr.charAt(j)));
				
				if (numberLength > 1 && j < numberLength - 1) {
					int num2 = Integer.parseInt(String.valueOf(numStr.charAt(j+1)));
					if (num1 <= num2) {
						isNumber = false;
						break;
					}
				}
			}
			
			if (isNumber) {
				numList.add(i);
			}
		}
		
		System.out.print("수 입력 : ");
		num = input.nextInt();
		
		result = num > numList.size() ? -1 : numList.get(num);
		
		System.out.println("결과 : " + result);




